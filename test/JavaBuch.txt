Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.


Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.

Warum es noch ein Java-Buch gibt ...  

Meine ursprüngliche Beschäftigung mit Java hängt eng mit einer universitären Pflichtveranstaltung zusammen. In unserer Projektgruppe beschäftigten wir uns 1997 mit einer objektorientierten Dialogspezifikation. Da ich den Seminarteilnehmern Java vorstellen wollte – Alternativen waren Objective-C, C(++) –, arbeitete ich meinen ersten Foliensatz für den Seminarvortrag aus. Als ich dann noch die Seminararbeit schreiben musste, wurde aus den geplanten Seminarseiten schon ein kleines Buch. Es kam sogar dazu, dass die so genannte »Seminararbeit« schon zu viele Seiten umfasste und die vorliegende Einleitung mehr oder weniger zur Seminararbeit verwurstet wurde; zumal das Tutorial zwischendurch immer dicker geworden war, da ich für meine ersten Java-Schulungen eine Seminarunterlage benötigte.

Dass es mich über die universitäre Pflicht hinaus zum Schreiben treibt, ist nur eine Lernstrategie. Wenn ich mich in neue Gebiete einarbeite, lese ich erst einmal auf Masse und beginne dann, Zusammenfassungen zu schreiben. Erst beim Schreiben wird mir richtig bewusst, was ich noch nicht weiß. Das Lernen durch Schreiben hat mir auch bei einem anderen Buch sehr geholfen, das leider nicht veröffentlicht wurde. Es ist ein Assembler-Buch für den MC680x0 im Amiga. Die Verlage konnten mir nur mitteilen, dass die Zeit des Amiga vorbei sei. [Damit habe ich eine Wette gegen Georg und Thomas verloren – sie durften bei einer großen Imbisskette so viel essen, wie sie wollten. Ich hatte später meinen Spaß, als wir mit dem Auto nach Hause fuhren und dreimal anhalten mussten. ] Die Prognosen für Java stehen besser, weil der Einsatz von Java mittlerweile so gefestigt ist wie der von COBOL bei Banken und Versicherungen. Und da die Insel seit zwölf Jahren – die erste Version gab es 1998 – verfügbar und besonders die Online-Variante beliebt ist, stellt sich heute die Frage nach einem »neuen« Java-Buch weniger denn je.

Heute sehe ich die Insel als ein sehr facettenreiches Java-Buch für die ambitionierten Entwickler an, die hinter die Kulissen schauen wollen. Ihr Detailgrad wird in dieser Breite von keinem anderen (mir bekannten) deutsch- oder englischsprachigen Buch erreicht.
